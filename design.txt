Tasktory設計メモ

core
|-- Tasktory    - タスクトリデータ構造定義
`-- Manager     - ファイルシステム（タスクトリの実体）の管理、同期、変換

trigger         - イベントトリガー

ui
|-- Journal     - タスクトリツリーと日報の変換機能
|-- Report      - 作業報告書出力機能
`-- Server      - HTML配信機能

◆タスクトリツリーとファイルシステムの対応

タスクトリツリーはpython上のデータ構造に過ぎず、実体として残す必要がある。
Pythonのオブジェクトを保存する方法はいくつかの選択肢がある。
Json, Pickle, DBなど。ここではファイルシステムそのものを使用してタスクトリツリ
ーを表現する事で、状態を保存する。これにより既存のファイルシステムを操作するだ
けでタスクトリシステムへのアクセスが可能になる。（つまり、優れたUIが手に入る）
具体的な投影方法について考えてみる。タスクトリが持ち、保存する必要のあるデータ
を列挙する
・名前              ：ディレクトリ名
・タイムスタンプ    ：プロファイルに保存
・期日              ：プロファイルに保存
・開始日            ：プロファイルに保存
・終了日            ：プロファイルに保存
・作業時間          ：プロファイルに保存
・親タスクトリ      ：親ディレクトリ
・子タスクトリ      ：子ディレクトリ
・ステータス        ：プロファイルに保存
・コメント          ：プロファイルに保存

/ProjectA/
|-- .tasktory
`-- TaskA/
    |-- .tasktory
    `-- SubTaskA/

◆コミットについて

